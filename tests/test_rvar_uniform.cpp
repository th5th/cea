#include <iostream>

#include <Cea/Core>
#include <Cea/Random>

// Kolmogorov-Smirnov test.
// Tests whether data generated by a provided 
// cea::RVar is likely to have come from a
// distribution whose CDF is provided.
#include "kstest.hpp"

using namespace cea;

bool test_rvar_uniform()
{
    const int num_tests = 1000; const double alpha = 0.05;
    const double a = -3.1; const double b = 1.7;
    prng_mwc_xorshift p;

    try
    {
        rvar_uniform<double> ru(&p,b,b);
    }
    catch(std::exception& e)
    {
        std::cout << " | Caught exception: " << e.what() << std::endl;
    }

    rvar_uniform<double> ru(&p,a,b);
    std::function<double(double)> cdf =
        [a,b](double x){ return (x-a)/(b-a); };

    ks_test tester(&ru, cdf, 100);

    int num_successes = tester.n_tests(num_tests, alpha) ;

    std::cout << " | " << num_successes << " tests in ";
    std::cout << num_tests << " succeeded." << std::endl;

    bool test_failed;
    if(((1.0-alpha)*num_tests - num_successes) / num_tests < 0.05)
    {
        std::cout << " | This compares well with an expected"
           " pass count of " << (1.0-alpha)*num_tests << "." << std::endl;
        test_failed = false;
    }
    else
    {
        std::cout << " | This compares poorly with an expected"
           " pass count of " << (1.0-alpha)*num_tests << "." << std::endl;
        test_failed = true;
    }
    return test_failed;
}
